'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.832
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dsHojaRuta"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsHojaRuta
    Inherits System.Data.DataSet
    
    Private tablehojaderuta As hojaderutaDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("hojaderuta")) Is Nothing) Then
                MyBase.Tables.Add(New hojaderutaDataTable(ds.Tables("hojaderuta")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property hojaderuta() As hojaderutaDataTable
        Get
            Return Me.tablehojaderuta
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dsHojaRuta = CType(MyBase.Clone,dsHojaRuta)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("hojaderuta")) Is Nothing) Then
                MyBase.Tables.Add(New hojaderutaDataTable(ds.Tables("hojaderuta")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablehojaderuta = CType(MyBase.Tables("hojaderuta"),hojaderutaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablehojaderuta) Is Nothing) Then
                Me.tablehojaderuta.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsHojaRuta"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsHojaRuta.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablehojaderuta = New hojaderutaDataTable
        MyBase.Tables.Add(Me.tablehojaderuta)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializehojaderuta() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsHojaRuta = New dsHojaRuta
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub hojaderutaRowChangeEventHandler(ByVal sender As Object, ByVal e As hojaderutaRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class hojaderutaDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnExpr1 As System.Data.DataColumn
        
        Private columnExpr2 As System.Data.DataColumn
        
        Private columnExpr3 As System.Data.DataColumn
        
        Private columnExpr5 As System.Data.DataColumn
        
        Private columnExpr4 As System.Data.DataColumn
        
        Private columnExpr6 As System.Data.DataColumn
        
        Private columnExpr7 As System.Data.DataColumn
        
        Private columnExpr8 As System.Data.DataColumn
        
        Private columnExpr9 As System.Data.DataColumn
        
        Private columnExpr10 As System.Data.DataColumn
        
        Private columnExpr11 As System.Data.DataColumn
        
        Private columnidhojaderuta As System.Data.DataColumn
        
        Private columnfechainicioproduccion As System.Data.DataColumn
        
        Private columnExpr12 As System.Data.DataColumn
        
        Private columnidetapadefabricacion As System.Data.DataColumn
        
        Private columnExpr13 As System.Data.DataColumn
        
        Private columnidtorneado As System.Data.DataColumn
        
        Private columnfechahorainicioreal As System.Data.DataColumn
        
        Private columnfechahorainicioplanificada As System.Data.DataColumn
        
        Private columnfechahorafinreal As System.Data.DataColumn
        
        Private columnfechahorafinplanificada As System.Data.DataColumn
        
        Private columnExpr14 As System.Data.DataColumn
        
        Private columnidlegajo As System.Data.DataColumn
        
        Private columnnombre As System.Data.DataColumn
        
        Private columnapellido As System.Data.DataColumn
        
        Private columndireccion As System.Data.DataColumn
        
        Private columntelefono As System.Data.DataColumn
        
        Private columnidcargo As System.Data.DataColumn
        
        Private columnemail As System.Data.DataColumn
        
        Private columntitulo As System.Data.DataColumn
        
        Private columnidlocalidad As System.Data.DataColumn
        
        Private columnturno As System.Data.DataColumn
        
        Private columnidperfil As System.Data.DataColumn
        
        Private columnidetapafabricacion As System.Data.DataColumn
        
        Private columnidmodelo As System.Data.DataColumn
        
        Private columnidtipofresa As System.Data.DataColumn
        
        Private columnidoperacion As System.Data.DataColumn
        
        Private columnorden As System.Data.DataColumn
        
        Private columntiempoadicional As System.Data.DataColumn
        
        Private columndetalle As System.Data.DataColumn
        
        Private columnidoperacion1 As System.Data.DataColumn
        
        Private columnnombre1 As System.Data.DataColumn
        
        Private columnmaquina As System.Data.DataColumn
        
        Private columnduracionpromedio As System.Data.DataColumn
        
        Private columnidgradodificultad As System.Data.DataColumn
        
        Private columntolerancia As System.Data.DataColumn
        
        Private columndescripcion As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "hojaderuta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr1Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr2Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr3Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr5Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr5
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr4Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr4
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr6Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr6
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr7Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr7
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr8Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr8
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr9Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr9
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr10Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr10
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr11Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr11
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idhojaderutaColumn() As System.Data.DataColumn
            Get
                Return Me.columnidhojaderuta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechainicioproduccionColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechainicioproduccion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr12Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr12
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idetapadefabricacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnidetapadefabricacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr13Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr13
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idtorneadoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidtorneado
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorainiciorealColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorainicioreal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorainicioplanificadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorainicioplanificada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorafinrealColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorafinreal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorafinplanificadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorafinplanificada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr14Column() As System.Data.DataColumn
            Get
                Return Me.columnExpr14
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idlegajoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidlegajo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property apellidoColumn() As System.Data.DataColumn
            Get
                Return Me.columnapellido
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property direccionColumn() As System.Data.DataColumn
            Get
                Return Me.columndireccion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telefonoColumn() As System.Data.DataColumn
            Get
                Return Me.columntelefono
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idcargoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidcargo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property emailColumn() As System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tituloColumn() As System.Data.DataColumn
            Get
                Return Me.columntitulo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idlocalidadColumn() As System.Data.DataColumn
            Get
                Return Me.columnidlocalidad
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property turnoColumn() As System.Data.DataColumn
            Get
                Return Me.columnturno
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idperfilColumn() As System.Data.DataColumn
            Get
                Return Me.columnidperfil
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idetapafabricacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnidetapafabricacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idmodeloColumn() As System.Data.DataColumn
            Get
                Return Me.columnidmodelo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idtipofresaColumn() As System.Data.DataColumn
            Get
                Return Me.columnidtipofresa
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idoperacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnidoperacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ordenColumn() As System.Data.DataColumn
            Get
                Return Me.columnorden
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tiempoadicionalColumn() As System.Data.DataColumn
            Get
                Return Me.columntiempoadicional
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property detalleColumn() As System.Data.DataColumn
            Get
                Return Me.columndetalle
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idoperacion1Column() As System.Data.DataColumn
            Get
                Return Me.columnidoperacion1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombre1Column() As System.Data.DataColumn
            Get
                Return Me.columnnombre1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property maquinaColumn() As System.Data.DataColumn
            Get
                Return Me.columnmaquina
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property duracionpromedioColumn() As System.Data.DataColumn
            Get
                Return Me.columnduracionpromedio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idgradodificultadColumn() As System.Data.DataColumn
            Get
                Return Me.columnidgradodificultad
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property toleranciaColumn() As System.Data.DataColumn
            Get
                Return Me.columntolerancia
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripcionColumn() As System.Data.DataColumn
            Get
                Return Me.columndescripcion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As hojaderutaRow
            Get
                Return CType(Me.Rows(index),hojaderutaRow)
            End Get
        End Property
        
        Public Event hojaderutaRowChanging As hojaderutaRowChangeEventHandler
        
        Public Event hojaderutaRowChanged As hojaderutaRowChangeEventHandler
        
        Public Event hojaderutaRowDeleting As hojaderutaRowChangeEventHandler
        
        Public Event hojaderutaRowDeleted As hojaderutaRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddhojaderutaRow(ByVal row As hojaderutaRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddhojaderutaRow( _
                    ByVal Expr1 As Integer,  _
                    ByVal Expr2 As Date,  _
                    ByVal Expr3 As Integer,  _
                    ByVal Expr5 As Integer,  _
                    ByVal Expr4 As Integer,  _
                    ByVal Expr6 As Integer,  _
                    ByVal Expr7 As Date,  _
                    ByVal Expr8 As Date,  _
                    ByVal Expr9 As Date,  _
                    ByVal Expr10 As Date,  _
                    ByVal Expr11 As String,  _
                    ByVal idhojaderuta As Integer,  _
                    ByVal fechainicioproduccion As Date,  _
                    ByVal Expr12 As Integer,  _
                    ByVal idetapadefabricacion As Integer,  _
                    ByVal Expr13 As Integer,  _
                    ByVal idtorneado As Integer,  _
                    ByVal fechahorainicioreal As Date,  _
                    ByVal fechahorainicioplanificada As Date,  _
                    ByVal fechahorafinreal As Date,  _
                    ByVal fechahorafinplanificada As Date,  _
                    ByVal Expr14 As String,  _
                    ByVal idlegajo As Integer,  _
                    ByVal nombre As String,  _
                    ByVal apellido As String,  _
                    ByVal direccion As String,  _
                    ByVal telefono As String,  _
                    ByVal idcargo As Integer,  _
                    ByVal email As String,  _
                    ByVal titulo As String,  _
                    ByVal idlocalidad As Integer,  _
                    ByVal turno As String,  _
                    ByVal idperfil As Integer,  _
                    ByVal idetapafabricacion As Integer,  _
                    ByVal idmodelo As Integer,  _
                    ByVal idtipofresa As Integer,  _
                    ByVal idoperacion As Integer,  _
                    ByVal orden As Integer,  _
                    ByVal tiempoadicional As Double,  _
                    ByVal detalle As String,  _
                    ByVal idoperacion1 As Integer,  _
                    ByVal nombre1 As String,  _
                    ByVal maquina As String,  _
                    ByVal duracionpromedio As Double,  _
                    ByVal idgradodificultad As Integer,  _
                    ByVal tolerancia As Double,  _
                    ByVal descripcion As String) As hojaderutaRow
            Dim rowhojaderutaRow As hojaderutaRow = CType(Me.NewRow,hojaderutaRow)
            rowhojaderutaRow.ItemArray = New Object() {Expr1, Expr2, Expr3, Expr5, Expr4, Expr6, Expr7, Expr8, Expr9, Expr10, Expr11, idhojaderuta, fechainicioproduccion, Expr12, idetapadefabricacion, Expr13, idtorneado, fechahorainicioreal, fechahorainicioplanificada, fechahorafinreal, fechahorafinplanificada, Expr14, idlegajo, nombre, apellido, direccion, telefono, idcargo, email, titulo, idlocalidad, turno, idperfil, idetapafabricacion, idmodelo, idtipofresa, idoperacion, orden, tiempoadicional, detalle, idoperacion1, nombre1, maquina, duracionpromedio, idgradodificultad, tolerancia, descripcion}
            Me.Rows.Add(rowhojaderutaRow)
            Return rowhojaderutaRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByExpr1Expr3Expr5idhojaderutaExpr12idetapadefabricacionidlegajoidetapafabricacionidmodeloidtipofresaidoperacion1(ByVal Expr1 As Integer, ByVal Expr3 As Integer, ByVal Expr5 As Integer, ByVal idhojaderuta As Integer, ByVal Expr12 As Integer, ByVal idetapadefabricacion As Integer, ByVal idlegajo As Integer, ByVal idetapafabricacion As Integer, ByVal idmodelo As Integer, ByVal idtipofresa As Integer, ByVal idoperacion1 As Integer) As hojaderutaRow
            Return CType(Me.Rows.Find(New Object() {Expr1, Expr3, Expr5, idhojaderuta, Expr12, idetapadefabricacion, idlegajo, idetapafabricacion, idmodelo, idtipofresa, idoperacion1}),hojaderutaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As hojaderutaDataTable = CType(MyBase.Clone,hojaderutaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New hojaderutaDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnExpr2 = MyBase.Columns("Expr2")
            Me.columnExpr3 = MyBase.Columns("Expr3")
            Me.columnExpr5 = MyBase.Columns("Expr5")
            Me.columnExpr4 = MyBase.Columns("Expr4")
            Me.columnExpr6 = MyBase.Columns("Expr6")
            Me.columnExpr7 = MyBase.Columns("Expr7")
            Me.columnExpr8 = MyBase.Columns("Expr8")
            Me.columnExpr9 = MyBase.Columns("Expr9")
            Me.columnExpr10 = MyBase.Columns("Expr10")
            Me.columnExpr11 = MyBase.Columns("Expr11")
            Me.columnidhojaderuta = MyBase.Columns("idhojaderuta")
            Me.columnfechainicioproduccion = MyBase.Columns("fechainicioproduccion")
            Me.columnExpr12 = MyBase.Columns("Expr12")
            Me.columnidetapadefabricacion = MyBase.Columns("idetapadefabricacion")
            Me.columnExpr13 = MyBase.Columns("Expr13")
            Me.columnidtorneado = MyBase.Columns("idtorneado")
            Me.columnfechahorainicioreal = MyBase.Columns("fechahorainicioreal")
            Me.columnfechahorainicioplanificada = MyBase.Columns("fechahorainicioplanificada")
            Me.columnfechahorafinreal = MyBase.Columns("fechahorafinreal")
            Me.columnfechahorafinplanificada = MyBase.Columns("fechahorafinplanificada")
            Me.columnExpr14 = MyBase.Columns("Expr14")
            Me.columnidlegajo = MyBase.Columns("idlegajo")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnapellido = MyBase.Columns("apellido")
            Me.columndireccion = MyBase.Columns("direccion")
            Me.columntelefono = MyBase.Columns("telefono")
            Me.columnidcargo = MyBase.Columns("idcargo")
            Me.columnemail = MyBase.Columns("email")
            Me.columntitulo = MyBase.Columns("titulo")
            Me.columnidlocalidad = MyBase.Columns("idlocalidad")
            Me.columnturno = MyBase.Columns("turno")
            Me.columnidperfil = MyBase.Columns("idperfil")
            Me.columnidetapafabricacion = MyBase.Columns("idetapafabricacion")
            Me.columnidmodelo = MyBase.Columns("idmodelo")
            Me.columnidtipofresa = MyBase.Columns("idtipofresa")
            Me.columnidoperacion = MyBase.Columns("idoperacion")
            Me.columnorden = MyBase.Columns("orden")
            Me.columntiempoadicional = MyBase.Columns("tiempoadicional")
            Me.columndetalle = MyBase.Columns("detalle")
            Me.columnidoperacion1 = MyBase.Columns("idoperacion1")
            Me.columnnombre1 = MyBase.Columns("nombre1")
            Me.columnmaquina = MyBase.Columns("maquina")
            Me.columnduracionpromedio = MyBase.Columns("duracionpromedio")
            Me.columnidgradodificultad = MyBase.Columns("idgradodificultad")
            Me.columntolerancia = MyBase.Columns("tolerancia")
            Me.columndescripcion = MyBase.Columns("descripcion")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnExpr1 = New System.Data.DataColumn("Expr1", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnExpr2 = New System.Data.DataColumn("Expr2", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.columnExpr3 = New System.Data.DataColumn("Expr3", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr3)
            Me.columnExpr5 = New System.Data.DataColumn("Expr5", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr5)
            Me.columnExpr4 = New System.Data.DataColumn("Expr4", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr4)
            Me.columnExpr6 = New System.Data.DataColumn("Expr6", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr6)
            Me.columnExpr7 = New System.Data.DataColumn("Expr7", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr7)
            Me.columnExpr8 = New System.Data.DataColumn("Expr8", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr8)
            Me.columnExpr9 = New System.Data.DataColumn("Expr9", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr9)
            Me.columnExpr10 = New System.Data.DataColumn("Expr10", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr10)
            Me.columnExpr11 = New System.Data.DataColumn("Expr11", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr11)
            Me.columnidhojaderuta = New System.Data.DataColumn("idhojaderuta", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidhojaderuta)
            Me.columnfechainicioproduccion = New System.Data.DataColumn("fechainicioproduccion", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechainicioproduccion)
            Me.columnExpr12 = New System.Data.DataColumn("Expr12", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr12)
            Me.columnidetapadefabricacion = New System.Data.DataColumn("idetapadefabricacion", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidetapadefabricacion)
            Me.columnExpr13 = New System.Data.DataColumn("Expr13", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr13)
            Me.columnidtorneado = New System.Data.DataColumn("idtorneado", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtorneado)
            Me.columnfechahorainicioreal = New System.Data.DataColumn("fechahorainicioreal", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorainicioreal)
            Me.columnfechahorainicioplanificada = New System.Data.DataColumn("fechahorainicioplanificada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorainicioplanificada)
            Me.columnfechahorafinreal = New System.Data.DataColumn("fechahorafinreal", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorafinreal)
            Me.columnfechahorafinplanificada = New System.Data.DataColumn("fechahorafinplanificada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorafinplanificada)
            Me.columnExpr14 = New System.Data.DataColumn("Expr14", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr14)
            Me.columnidlegajo = New System.Data.DataColumn("idlegajo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidlegajo)
            Me.columnnombre = New System.Data.DataColumn("nombre", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnapellido = New System.Data.DataColumn("apellido", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapellido)
            Me.columndireccion = New System.Data.DataColumn("direccion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndireccion)
            Me.columntelefono = New System.Data.DataColumn("telefono", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono)
            Me.columnidcargo = New System.Data.DataColumn("idcargo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidcargo)
            Me.columnemail = New System.Data.DataColumn("email", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columntitulo = New System.Data.DataColumn("titulo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitulo)
            Me.columnidlocalidad = New System.Data.DataColumn("idlocalidad", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidlocalidad)
            Me.columnturno = New System.Data.DataColumn("turno", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnturno)
            Me.columnidperfil = New System.Data.DataColumn("idperfil", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidperfil)
            Me.columnidetapafabricacion = New System.Data.DataColumn("idetapafabricacion", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidetapafabricacion)
            Me.columnidmodelo = New System.Data.DataColumn("idmodelo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidmodelo)
            Me.columnidtipofresa = New System.Data.DataColumn("idtipofresa", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtipofresa)
            Me.columnidoperacion = New System.Data.DataColumn("idoperacion", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidoperacion)
            Me.columnorden = New System.Data.DataColumn("orden", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorden)
            Me.columntiempoadicional = New System.Data.DataColumn("tiempoadicional", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntiempoadicional)
            Me.columndetalle = New System.Data.DataColumn("detalle", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndetalle)
            Me.columnidoperacion1 = New System.Data.DataColumn("idoperacion1", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidoperacion1)
            Me.columnnombre1 = New System.Data.DataColumn("nombre1", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre1)
            Me.columnmaquina = New System.Data.DataColumn("maquina", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaquina)
            Me.columnduracionpromedio = New System.Data.DataColumn("duracionpromedio", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnduracionpromedio)
            Me.columnidgradodificultad = New System.Data.DataColumn("idgradodificultad", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidgradodificultad)
            Me.columntolerancia = New System.Data.DataColumn("tolerancia", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntolerancia)
            Me.columndescripcion = New System.Data.DataColumn("descripcion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescripcion)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnExpr1, Me.columnExpr3, Me.columnExpr5, Me.columnidhojaderuta, Me.columnExpr12, Me.columnidetapadefabricacion, Me.columnidlegajo, Me.columnidetapafabricacion, Me.columnidmodelo, Me.columnidtipofresa, Me.columnidoperacion1}, true))
            Me.columnExpr1.AllowDBNull = false
            Me.columnExpr3.AllowDBNull = false
            Me.columnExpr5.AllowDBNull = false
            Me.columnExpr11.MaxLength = 30
            Me.columnidhojaderuta.AllowDBNull = false
            Me.columnExpr12.AllowDBNull = false
            Me.columnidetapadefabricacion.AllowDBNull = false
            Me.columnExpr14.MaxLength = 30
            Me.columnidlegajo.AllowDBNull = false
            Me.columnnombre.MaxLength = 50
            Me.columnapellido.MaxLength = 50
            Me.columndireccion.MaxLength = 20
            Me.columntelefono.MaxLength = 20
            Me.columnemail.MaxLength = 30
            Me.columntitulo.MaxLength = 30
            Me.columnturno.MaxLength = 30
            Me.columnidetapafabricacion.AllowDBNull = false
            Me.columnidmodelo.AllowDBNull = false
            Me.columnidtipofresa.AllowDBNull = false
            Me.columndetalle.MaxLength = 2147483647
            Me.columnidoperacion1.AllowDBNull = false
            Me.columnnombre1.MaxLength = 40
            Me.columnmaquina.MaxLength = 40
            Me.columndescripcion.MaxLength = 2147483647
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewhojaderutaRow() As hojaderutaRow
            Return CType(Me.NewRow,hojaderutaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New hojaderutaRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(hojaderutaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.hojaderutaRowChangedEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowChanged(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.hojaderutaRowChangingEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowChanging(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.hojaderutaRowDeletedEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowDeleted(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.hojaderutaRowDeletingEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowDeleting(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovehojaderutaRow(ByVal row As hojaderutaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsHojaRuta = New dsHojaRuta
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "hojaderutaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class hojaderutaRow
        Inherits System.Data.DataRow
        
        Private tablehojaderuta As hojaderutaDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablehojaderuta = CType(Me.Table,hojaderutaDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr1() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.Expr1Column),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.Expr1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr2() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr2Column),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr2' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr3() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.Expr3Column),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.Expr3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr5() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.Expr5Column),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.Expr5Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr4Column),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr4' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr4Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr6() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr6Column),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr6' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr6Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr7() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr7Column),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr7' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr7Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr8() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr8Column),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr8' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr8Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr9() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr9Column),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr9' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr9Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr10() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr10Column),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr10' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr10Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr11() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr11Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr11' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr11Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idhojaderuta() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idhojaderutaColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idhojaderutaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechainicioproduccion() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechainicioproduccionColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechainicioproduccion' de la tabla 'hojaderuta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechainicioproduccionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr12() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.Expr12Column),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.Expr12Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idetapadefabricacion() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idetapadefabricacionColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idetapadefabricacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr13() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr13Column),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr13' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr13Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idtorneado() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idtorneadoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idtorneado' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idtorneadoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorainicioreal() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorainiciorealColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorainicioreal' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorainiciorealColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorainicioplanificada() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorainicioplanificadaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorainicioplanificada' de la tabla 'hojaderuta' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorainicioplanificadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorafinreal() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorafinrealColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorafinreal' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorafinrealColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorafinplanificada() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorafinplanificadaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorafinplanificada' de la tabla 'hojaderuta' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorafinplanificadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr14() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.Expr14Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'Expr14' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.Expr14Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idlegajo() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idlegajoColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idlegajoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.nombreColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombre' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.nombreColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property apellido() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.apellidoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'apellido' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.apellidoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property direccion() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.direccionColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'direccion' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.direccionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.telefonoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'telefono' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.telefonoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idcargo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idcargoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idcargo' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idcargoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property email() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.emailColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'email' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.emailColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property titulo() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.tituloColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'titulo' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.tituloColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idlocalidad() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idlocalidadColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idlocalidad' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idlocalidadColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property turno() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.turnoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'turno' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.turnoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idperfil() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idperfilColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idperfil' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idperfilColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idetapafabricacion() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idetapafabricacionColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idetapafabricacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idmodelo() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idmodeloColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idmodeloColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idtipofresa() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idtipofresaColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idtipofresaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idoperacion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idoperacionColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idoperacion' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idoperacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orden() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.ordenColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'orden' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.ordenColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tiempoadicional() As Double
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.tiempoadicionalColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'tiempoadicional' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.tiempoadicionalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.detalleColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'detalle' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.detalleColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idoperacion1() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idoperacion1Column),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idoperacion1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre1() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.nombre1Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombre1' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.nombre1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maquina() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.maquinaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'maquina' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.maquinaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property duracionpromedio() As Double
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.duracionpromedioColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'duracionpromedio' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.duracionpromedioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idgradodificultad() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idgradodificultadColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idgradodificultad' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idgradodificultadColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tolerancia() As Double
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.toleranciaColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'tolerancia' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.toleranciaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descripcion() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.descripcionColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'descripcion' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.descripcionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr2Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr2Null()
            Me(Me.tablehojaderuta.Expr2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr4Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr4Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr4Null()
            Me(Me.tablehojaderuta.Expr4Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr6Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr6Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr6Null()
            Me(Me.tablehojaderuta.Expr6Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr7Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr7Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr7Null()
            Me(Me.tablehojaderuta.Expr7Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr8Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr8Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr8Null()
            Me(Me.tablehojaderuta.Expr8Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr9Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr9Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr9Null()
            Me(Me.tablehojaderuta.Expr9Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr10Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr10Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr10Null()
            Me(Me.tablehojaderuta.Expr10Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr11Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr11Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr11Null()
            Me(Me.tablehojaderuta.Expr11Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechainicioproduccionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechainicioproduccionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechainicioproduccionNull()
            Me(Me.tablehojaderuta.fechainicioproduccionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr13Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr13Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr13Null()
            Me(Me.tablehojaderuta.Expr13Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidtorneadoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idtorneadoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidtorneadoNull()
            Me(Me.tablehojaderuta.idtorneadoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorainiciorealNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorainiciorealColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorainiciorealNull()
            Me(Me.tablehojaderuta.fechahorainiciorealColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorainicioplanificadaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorainicioplanificadaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorainicioplanificadaNull()
            Me(Me.tablehojaderuta.fechahorainicioplanificadaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorafinrealNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorafinrealColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorafinrealNull()
            Me(Me.tablehojaderuta.fechahorafinrealColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorafinplanificadaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorafinplanificadaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorafinplanificadaNull()
            Me(Me.tablehojaderuta.fechahorafinplanificadaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr14Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.Expr14Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr14Null()
            Me(Me.tablehojaderuta.Expr14Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.nombreColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreNull()
            Me(Me.tablehojaderuta.nombreColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsapellidoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.apellidoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetapellidoNull()
            Me(Me.tablehojaderuta.apellidoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdireccionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.direccionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdireccionNull()
            Me(Me.tablehojaderuta.direccionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstelefonoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.telefonoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettelefonoNull()
            Me(Me.tablehojaderuta.telefonoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidcargoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idcargoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidcargoNull()
            Me(Me.tablehojaderuta.idcargoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.emailColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetemailNull()
            Me(Me.tablehojaderuta.emailColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstituloNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.tituloColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettituloNull()
            Me(Me.tablehojaderuta.tituloColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidlocalidadNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idlocalidadColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidlocalidadNull()
            Me(Me.tablehojaderuta.idlocalidadColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsturnoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.turnoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetturnoNull()
            Me(Me.tablehojaderuta.turnoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidperfilNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idperfilColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidperfilNull()
            Me(Me.tablehojaderuta.idperfilColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidoperacionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idoperacionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidoperacionNull()
            Me(Me.tablehojaderuta.idoperacionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsordenNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.ordenColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetordenNull()
            Me(Me.tablehojaderuta.ordenColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstiempoadicionalNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.tiempoadicionalColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettiempoadicionalNull()
            Me(Me.tablehojaderuta.tiempoadicionalColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdetalleNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.detalleColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdetalleNull()
            Me(Me.tablehojaderuta.detalleColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnombre1Null() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.nombre1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnombre1Null()
            Me(Me.tablehojaderuta.nombre1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmaquinaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.maquinaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmaquinaNull()
            Me(Me.tablehojaderuta.maquinaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsduracionpromedioNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.duracionpromedioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetduracionpromedioNull()
            Me(Me.tablehojaderuta.duracionpromedioColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidgradodificultadNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idgradodificultadColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidgradodificultadNull()
            Me(Me.tablehojaderuta.idgradodificultadColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstoleranciaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.toleranciaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettoleranciaNull()
            Me(Me.tablehojaderuta.toleranciaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdescripcionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.descripcionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdescripcionNull()
            Me(Me.tablehojaderuta.descripcionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class hojaderutaRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As hojaderutaRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As hojaderutaRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As hojaderutaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
