'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.832
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("DSHojaDeRuta"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSHojaDeRuta
    Inherits System.Data.DataSet
    
    Private tablemaestro_hr As maestro_hrDataTable
    
    Private tabledetalle_hr As detalle_hrDataTable
    
    Private relationmaestro_hr_detalle_hr As System.Data.DataRelation
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("maestro_hr")) Is Nothing) Then
                MyBase.Tables.Add(New maestro_hrDataTable(ds.Tables("maestro_hr")))
            End If
            If (Not (ds.Tables("detalle_hr")) Is Nothing) Then
                MyBase.Tables.Add(New detalle_hrDataTable(ds.Tables("detalle_hr")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property maestro_hr() As maestro_hrDataTable
        Get
            Return Me.tablemaestro_hr
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property detalle_hr() As detalle_hrDataTable
        Get
            Return Me.tabledetalle_hr
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As DSHojaDeRuta = CType(MyBase.Clone,DSHojaDeRuta)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("maestro_hr")) Is Nothing) Then
                MyBase.Tables.Add(New maestro_hrDataTable(ds.Tables("maestro_hr")))
            End If
            If (Not (ds.Tables("detalle_hr")) Is Nothing) Then
                MyBase.Tables.Add(New detalle_hrDataTable(ds.Tables("detalle_hr")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablemaestro_hr = CType(MyBase.Tables("maestro_hr"),maestro_hrDataTable)
        If (initTable = true) Then
            If (Not (Me.tablemaestro_hr) Is Nothing) Then
                Me.tablemaestro_hr.InitVars
            End If
        End If
        Me.tabledetalle_hr = CType(MyBase.Tables("detalle_hr"),detalle_hrDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledetalle_hr) Is Nothing) Then
                Me.tabledetalle_hr.InitVars
            End If
        End If
        Me.relationmaestro_hr_detalle_hr = Me.Relations("maestro_hr_detalle_hr")
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DSHojaDeRuta"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSHojaDeRuta.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablemaestro_hr = New maestro_hrDataTable
        MyBase.Tables.Add(Me.tablemaestro_hr)
        Me.tabledetalle_hr = New detalle_hrDataTable
        MyBase.Tables.Add(Me.tabledetalle_hr)
        Me.relationmaestro_hr_detalle_hr = New System.Data.DataRelation("maestro_hr_detalle_hr", New System.Data.DataColumn() {Me.tablemaestro_hr.idhojaderutaColumn}, New System.Data.DataColumn() {Me.tabledetalle_hr.idhojaderutaColumn}, false)
        Me.Relations.Add(Me.relationmaestro_hr_detalle_hr)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemaestro_hr() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedetalle_hr() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSHojaDeRuta = New DSHojaDeRuta
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub maestro_hrRowChangeEventHandler(ByVal sender As Object, ByVal e As maestro_hrRowChangeEvent)
    
    Public Delegate Sub detalle_hrRowChangeEventHandler(ByVal sender As Object, ByVal e As detalle_hrRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class maestro_hrDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnnroserie As System.Data.DataColumn
        
        Private columnfechafinfabricacion As System.Data.DataColumn
        
        Private columncostofabricacion As System.Data.DataColumn
        
        Private columnestado As System.Data.DataColumn
        
        Private columnnropedido As System.Data.DataColumn
        
        Private columncontrolcalidad As System.Data.DataColumn
        
        Private columnidhojaderuta As System.Data.DataColumn
        
        Private columnprecio As System.Data.DataColumn
        
        Private columnidtipo As System.Data.DataColumn
        
        Private columnidmodelo As System.Data.DataColumn
        
        Private columnnombre As System.Data.DataColumn
        
        Private columndiametroexterior As System.Data.DataColumn
        
        Private columndiametroagujero As System.Data.DataColumn
        
        Private columncantidaddientes As System.Data.DataColumn
        
        Private columnplano As System.Data.DataColumn
        
        Private columncaracteristicas As System.Data.DataColumn
        
        Private columnimagen As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "maestro_hr"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nroserieColumn() As System.Data.DataColumn
            Get
                Return Me.columnnroserie
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechafinfabricacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechafinfabricacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costofabricacionColumn() As System.Data.DataColumn
            Get
                Return Me.columncostofabricacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nropedidoColumn() As System.Data.DataColumn
            Get
                Return Me.columnnropedido
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property controlcalidadColumn() As System.Data.DataColumn
            Get
                Return Me.columncontrolcalidad
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idhojaderutaColumn() As System.Data.DataColumn
            Get
                Return Me.columnidhojaderuta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precioColumn() As System.Data.DataColumn
            Get
                Return Me.columnprecio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idtipoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidtipo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idmodeloColumn() As System.Data.DataColumn
            Get
                Return Me.columnidmodelo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diametroexteriorColumn() As System.Data.DataColumn
            Get
                Return Me.columndiametroexterior
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diametroagujeroColumn() As System.Data.DataColumn
            Get
                Return Me.columndiametroagujero
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cantidaddientesColumn() As System.Data.DataColumn
            Get
                Return Me.columncantidaddientes
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property planoColumn() As System.Data.DataColumn
            Get
                Return Me.columnplano
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property caracteristicasColumn() As System.Data.DataColumn
            Get
                Return Me.columncaracteristicas
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imagenColumn() As System.Data.DataColumn
            Get
                Return Me.columnimagen
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As maestro_hrRow
            Get
                Return CType(Me.Rows(index),maestro_hrRow)
            End Get
        End Property
        
        Public Event maestro_hrRowChanging As maestro_hrRowChangeEventHandler
        
        Public Event maestro_hrRowChanged As maestro_hrRowChangeEventHandler
        
        Public Event maestro_hrRowDeleting As maestro_hrRowChangeEventHandler
        
        Public Event maestro_hrRowDeleted As maestro_hrRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmaestro_hrRow(ByVal row As maestro_hrRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmaestro_hrRow( _
                    ByVal nroserie As Integer,  _
                    ByVal fechafinfabricacion As Date,  _
                    ByVal costofabricacion As Decimal,  _
                    ByVal estado As Integer,  _
                    ByVal nropedido As Decimal,  _
                    ByVal controlcalidad As Integer,  _
                    ByVal idhojaderuta As Integer,  _
                    ByVal precio As Decimal,  _
                    ByVal idtipo As Integer,  _
                    ByVal idmodelo As Integer,  _
                    ByVal nombre As String,  _
                    ByVal diametroexterior As Decimal,  _
                    ByVal diametroagujero As Decimal,  _
                    ByVal cantidaddientes As Integer,  _
                    ByVal plano As String,  _
                    ByVal caracteristicas As String,  _
                    ByVal imagen() As Byte) As maestro_hrRow
            Dim rowmaestro_hrRow As maestro_hrRow = CType(Me.NewRow,maestro_hrRow)
            rowmaestro_hrRow.ItemArray = New Object() {nroserie, fechafinfabricacion, costofabricacion, estado, nropedido, controlcalidad, idhojaderuta, precio, idtipo, idmodelo, nombre, diametroexterior, diametroagujero, cantidaddientes, plano, caracteristicas, imagen}
            Me.Rows.Add(rowmaestro_hrRow)
            Return rowmaestro_hrRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBynroserie(ByVal nroserie As Integer) As maestro_hrRow
            Return CType(Me.Rows.Find(New Object() {nroserie}),maestro_hrRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As maestro_hrDataTable = CType(MyBase.Clone,maestro_hrDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New maestro_hrDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnnroserie = MyBase.Columns("nroserie")
            Me.columnfechafinfabricacion = MyBase.Columns("fechafinfabricacion")
            Me.columncostofabricacion = MyBase.Columns("costofabricacion")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnnropedido = MyBase.Columns("nropedido")
            Me.columncontrolcalidad = MyBase.Columns("controlcalidad")
            Me.columnidhojaderuta = MyBase.Columns("idhojaderuta")
            Me.columnprecio = MyBase.Columns("precio")
            Me.columnidtipo = MyBase.Columns("idtipo")
            Me.columnidmodelo = MyBase.Columns("idmodelo")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columndiametroexterior = MyBase.Columns("diametroexterior")
            Me.columndiametroagujero = MyBase.Columns("diametroagujero")
            Me.columncantidaddientes = MyBase.Columns("cantidaddientes")
            Me.columnplano = MyBase.Columns("plano")
            Me.columncaracteristicas = MyBase.Columns("caracteristicas")
            Me.columnimagen = MyBase.Columns("imagen")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnnroserie = New System.Data.DataColumn("nroserie", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnroserie)
            Me.columnfechafinfabricacion = New System.Data.DataColumn("fechafinfabricacion", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechafinfabricacion)
            Me.columncostofabricacion = New System.Data.DataColumn("costofabricacion", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncostofabricacion)
            Me.columnestado = New System.Data.DataColumn("estado", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnnropedido = New System.Data.DataColumn("nropedido", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnropedido)
            Me.columncontrolcalidad = New System.Data.DataColumn("controlcalidad", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrolcalidad)
            Me.columnidhojaderuta = New System.Data.DataColumn("idhojaderuta", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidhojaderuta)
            Me.columnprecio = New System.Data.DataColumn("precio", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio)
            Me.columnidtipo = New System.Data.DataColumn("idtipo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtipo)
            Me.columnidmodelo = New System.Data.DataColumn("idmodelo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidmodelo)
            Me.columnnombre = New System.Data.DataColumn("nombre", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columndiametroexterior = New System.Data.DataColumn("diametroexterior", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiametroexterior)
            Me.columndiametroagujero = New System.Data.DataColumn("diametroagujero", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiametroagujero)
            Me.columncantidaddientes = New System.Data.DataColumn("cantidaddientes", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidaddientes)
            Me.columnplano = New System.Data.DataColumn("plano", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplano)
            Me.columncaracteristicas = New System.Data.DataColumn("caracteristicas", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncaracteristicas)
            Me.columnimagen = New System.Data.DataColumn("imagen", GetType(Byte()), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimagen)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnnroserie}, true))
            Me.columnnroserie.AllowDBNull = false
            Me.columnnroserie.Unique = true
            Me.columnnropedido.AllowDBNull = false
            Me.columnnombre.MaxLength = 100
            Me.columnplano.MaxLength = 80
            Me.columncaracteristicas.MaxLength = 2147483647
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmaestro_hrRow() As maestro_hrRow
            Return CType(Me.NewRow,maestro_hrRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New maestro_hrRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(maestro_hrRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.maestro_hrRowChangedEvent) Is Nothing) Then
                RaiseEvent maestro_hrRowChanged(Me, New maestro_hrRowChangeEvent(CType(e.Row,maestro_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.maestro_hrRowChangingEvent) Is Nothing) Then
                RaiseEvent maestro_hrRowChanging(Me, New maestro_hrRowChangeEvent(CType(e.Row,maestro_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.maestro_hrRowDeletedEvent) Is Nothing) Then
                RaiseEvent maestro_hrRowDeleted(Me, New maestro_hrRowChangeEvent(CType(e.Row,maestro_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.maestro_hrRowDeletingEvent) Is Nothing) Then
                RaiseEvent maestro_hrRowDeleting(Me, New maestro_hrRowChangeEvent(CType(e.Row,maestro_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemaestro_hrRow(ByVal row As maestro_hrRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSHojaDeRuta = New DSHojaDeRuta
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "maestro_hrDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class detalle_hrDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnidhojaderuta As System.Data.DataColumn
        
        Private columnidetapadefabricacion As System.Data.DataColumn
        
        Private columnidlegajo As System.Data.DataColumn
        
        Private columnidtorneado As System.Data.DataColumn
        
        Private columnfechahorainicioreal As System.Data.DataColumn
        
        Private columnfechahorainicioplanificada As System.Data.DataColumn
        
        Private columnfechahorafinreal As System.Data.DataColumn
        
        Private columnfechahorafinplanificada As System.Data.DataColumn
        
        Private columnobservaciones As System.Data.DataColumn
        
        Private columnnombre As System.Data.DataColumn
        
        Private columnmaquina As System.Data.DataColumn
        
        Private columnduracionpromedio As System.Data.DataColumn
        
        Private columndetalle As System.Data.DataColumn
        
        Private columnorden As System.Data.DataColumn
        
        Private columntiempoadicional As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "detalle_hr"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idhojaderutaColumn() As System.Data.DataColumn
            Get
                Return Me.columnidhojaderuta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idetapadefabricacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnidetapadefabricacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idlegajoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidlegajo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idtorneadoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidtorneado
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorainiciorealColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorainicioreal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorainicioplanificadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorainicioplanificada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorafinrealColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorafinreal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorafinplanificadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorafinplanificada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property observacionesColumn() As System.Data.DataColumn
            Get
                Return Me.columnobservaciones
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property maquinaColumn() As System.Data.DataColumn
            Get
                Return Me.columnmaquina
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property duracionpromedioColumn() As System.Data.DataColumn
            Get
                Return Me.columnduracionpromedio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property detalleColumn() As System.Data.DataColumn
            Get
                Return Me.columndetalle
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ordenColumn() As System.Data.DataColumn
            Get
                Return Me.columnorden
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tiempoadicionalColumn() As System.Data.DataColumn
            Get
                Return Me.columntiempoadicional
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As detalle_hrRow
            Get
                Return CType(Me.Rows(index),detalle_hrRow)
            End Get
        End Property
        
        Public Event detalle_hrRowChanging As detalle_hrRowChangeEventHandler
        
        Public Event detalle_hrRowChanged As detalle_hrRowChangeEventHandler
        
        Public Event detalle_hrRowDeleting As detalle_hrRowChangeEventHandler
        
        Public Event detalle_hrRowDeleted As detalle_hrRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddetalle_hrRow(ByVal row As detalle_hrRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddetalle_hrRow(ByVal parentmaestro_hrRowBymaestro_hr_detalle_hr As maestro_hrRow, ByVal idetapadefabricacion As Integer, ByVal idlegajo As Integer, ByVal idtorneado As Integer, ByVal fechahorainicioreal As Date, ByVal fechahorainicioplanificada As Date, ByVal fechahorafinreal As Date, ByVal fechahorafinplanificada As Date, ByVal observaciones As String, ByVal nombre As String, ByVal maquina As String, ByVal duracionpromedio As Double, ByVal detalle As String, ByVal orden As Integer, ByVal tiempoadicional As Double) As detalle_hrRow
            Dim rowdetalle_hrRow As detalle_hrRow = CType(Me.NewRow,detalle_hrRow)
            rowdetalle_hrRow.ItemArray = New Object() {parentmaestro_hrRowBymaestro_hr_detalle_hr(6), idetapadefabricacion, idlegajo, idtorneado, fechahorainicioreal, fechahorainicioplanificada, fechahorafinreal, fechahorafinplanificada, observaciones, nombre, maquina, duracionpromedio, detalle, orden, tiempoadicional}
            Me.Rows.Add(rowdetalle_hrRow)
            Return rowdetalle_hrRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByidhojaderutaidetapadefabricacion(ByVal idhojaderuta As Integer, ByVal idetapadefabricacion As Integer) As detalle_hrRow
            Return CType(Me.Rows.Find(New Object() {idhojaderuta, idetapadefabricacion}),detalle_hrRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As detalle_hrDataTable = CType(MyBase.Clone,detalle_hrDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New detalle_hrDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnidhojaderuta = MyBase.Columns("idhojaderuta")
            Me.columnidetapadefabricacion = MyBase.Columns("idetapadefabricacion")
            Me.columnidlegajo = MyBase.Columns("idlegajo")
            Me.columnidtorneado = MyBase.Columns("idtorneado")
            Me.columnfechahorainicioreal = MyBase.Columns("fechahorainicioreal")
            Me.columnfechahorainicioplanificada = MyBase.Columns("fechahorainicioplanificada")
            Me.columnfechahorafinreal = MyBase.Columns("fechahorafinreal")
            Me.columnfechahorafinplanificada = MyBase.Columns("fechahorafinplanificada")
            Me.columnobservaciones = MyBase.Columns("observaciones")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnmaquina = MyBase.Columns("maquina")
            Me.columnduracionpromedio = MyBase.Columns("duracionpromedio")
            Me.columndetalle = MyBase.Columns("detalle")
            Me.columnorden = MyBase.Columns("orden")
            Me.columntiempoadicional = MyBase.Columns("tiempoadicional")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnidhojaderuta = New System.Data.DataColumn("idhojaderuta", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidhojaderuta)
            Me.columnidetapadefabricacion = New System.Data.DataColumn("idetapadefabricacion", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidetapadefabricacion)
            Me.columnidlegajo = New System.Data.DataColumn("idlegajo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidlegajo)
            Me.columnidtorneado = New System.Data.DataColumn("idtorneado", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtorneado)
            Me.columnfechahorainicioreal = New System.Data.DataColumn("fechahorainicioreal", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorainicioreal)
            Me.columnfechahorainicioplanificada = New System.Data.DataColumn("fechahorainicioplanificada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorainicioplanificada)
            Me.columnfechahorafinreal = New System.Data.DataColumn("fechahorafinreal", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorafinreal)
            Me.columnfechahorafinplanificada = New System.Data.DataColumn("fechahorafinplanificada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorafinplanificada)
            Me.columnobservaciones = New System.Data.DataColumn("observaciones", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservaciones)
            Me.columnnombre = New System.Data.DataColumn("nombre", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnmaquina = New System.Data.DataColumn("maquina", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaquina)
            Me.columnduracionpromedio = New System.Data.DataColumn("duracionpromedio", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnduracionpromedio)
            Me.columndetalle = New System.Data.DataColumn("detalle", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndetalle)
            Me.columnorden = New System.Data.DataColumn("orden", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorden)
            Me.columntiempoadicional = New System.Data.DataColumn("tiempoadicional", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntiempoadicional)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnidhojaderuta, Me.columnidetapadefabricacion}, true))
            Me.columnidhojaderuta.AllowDBNull = false
            Me.columnidetapadefabricacion.AllowDBNull = false
            Me.columnobservaciones.MaxLength = 30
            Me.columnnombre.MaxLength = 40
            Me.columnmaquina.MaxLength = 40
            Me.columndetalle.MaxLength = 2147483647
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdetalle_hrRow() As detalle_hrRow
            Return CType(Me.NewRow,detalle_hrRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New detalle_hrRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(detalle_hrRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.detalle_hrRowChangedEvent) Is Nothing) Then
                RaiseEvent detalle_hrRowChanged(Me, New detalle_hrRowChangeEvent(CType(e.Row,detalle_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.detalle_hrRowChangingEvent) Is Nothing) Then
                RaiseEvent detalle_hrRowChanging(Me, New detalle_hrRowChangeEvent(CType(e.Row,detalle_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.detalle_hrRowDeletedEvent) Is Nothing) Then
                RaiseEvent detalle_hrRowDeleted(Me, New detalle_hrRowChangeEvent(CType(e.Row,detalle_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.detalle_hrRowDeletingEvent) Is Nothing) Then
                RaiseEvent detalle_hrRowDeleting(Me, New detalle_hrRowChangeEvent(CType(e.Row,detalle_hrRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedetalle_hrRow(ByVal row As detalle_hrRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSHojaDeRuta = New DSHojaDeRuta
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "detalle_hrDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class maestro_hrRow
        Inherits System.Data.DataRow
        
        Private tablemaestro_hr As maestro_hrDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemaestro_hr = CType(Me.Table,maestro_hrDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nroserie() As Integer
            Get
                Return CType(Me(Me.tablemaestro_hr.nroserieColumn),Integer)
            End Get
            Set
                Me(Me.tablemaestro_hr.nroserieColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechafinfabricacion() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.fechafinfabricacionColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechafinfabricacion' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.fechafinfabricacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costofabricacion() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.costofabricacionColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'costofabricacion' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.costofabricacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.estadoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.estadoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nropedido() As Decimal
            Get
                Return CType(Me(Me.tablemaestro_hr.nropedidoColumn),Decimal)
            End Get
            Set
                Me(Me.tablemaestro_hr.nropedidoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property controlcalidad() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.controlcalidadColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'controlcalidad' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.controlcalidadColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idhojaderuta() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.idhojaderutaColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idhojaderuta' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.idhojaderutaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.precioColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'precio' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.precioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idtipo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.idtipoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idtipo' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.idtipoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idmodelo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.idmodeloColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idmodelo' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.idmodeloColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.nombreColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombre' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.nombreColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property diametroexterior() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.diametroexteriorColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'diametroexterior' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.diametroexteriorColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property diametroagujero() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.diametroagujeroColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'diametroagujero' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.diametroagujeroColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cantidaddientes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.cantidaddientesColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'cantidaddientes' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.cantidaddientesColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property plano() As String
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.planoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'plano' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.planoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property caracteristicas() As String
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.caracteristicasColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'caracteristicas' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.caracteristicasColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imagen() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablemaestro_hr.imagenColumn),Byte())
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'imagen' de la tabla 'maestro_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemaestro_hr.imagenColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechafinfabricacionNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.fechafinfabricacionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechafinfabricacionNull()
            Me(Me.tablemaestro_hr.fechafinfabricacionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscostofabricacionNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.costofabricacionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcostofabricacionNull()
            Me(Me.tablemaestro_hr.costofabricacionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.estadoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetestadoNull()
            Me(Me.tablemaestro_hr.estadoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscontrolcalidadNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.controlcalidadColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcontrolcalidadNull()
            Me(Me.tablemaestro_hr.controlcalidadColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidhojaderutaNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.idhojaderutaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidhojaderutaNull()
            Me(Me.tablemaestro_hr.idhojaderutaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsprecioNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.precioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetprecioNull()
            Me(Me.tablemaestro_hr.precioColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidtipoNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.idtipoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidtipoNull()
            Me(Me.tablemaestro_hr.idtipoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidmodeloNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.idmodeloColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidmodeloNull()
            Me(Me.tablemaestro_hr.idmodeloColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.nombreColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreNull()
            Me(Me.tablemaestro_hr.nombreColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdiametroexteriorNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.diametroexteriorColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdiametroexteriorNull()
            Me(Me.tablemaestro_hr.diametroexteriorColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdiametroagujeroNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.diametroagujeroColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdiametroagujeroNull()
            Me(Me.tablemaestro_hr.diametroagujeroColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscantidaddientesNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.cantidaddientesColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcantidaddientesNull()
            Me(Me.tablemaestro_hr.cantidaddientesColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsplanoNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.planoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetplanoNull()
            Me(Me.tablemaestro_hr.planoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscaracteristicasNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.caracteristicasColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcaracteristicasNull()
            Me(Me.tablemaestro_hr.caracteristicasColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsimagenNull() As Boolean
            Return Me.IsNull(Me.tablemaestro_hr.imagenColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetimagenNull()
            Me(Me.tablemaestro_hr.imagenColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Getdetalle_hrRows() As detalle_hrRow()
            Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("maestro_hr_detalle_hr")),detalle_hrRow())
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class detalle_hrRow
        Inherits System.Data.DataRow
        
        Private tabledetalle_hr As detalle_hrDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledetalle_hr = CType(Me.Table,detalle_hrDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idhojaderuta() As Integer
            Get
                Return CType(Me(Me.tabledetalle_hr.idhojaderutaColumn),Integer)
            End Get
            Set
                Me(Me.tabledetalle_hr.idhojaderutaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idetapadefabricacion() As Integer
            Get
                Return CType(Me(Me.tabledetalle_hr.idetapadefabricacionColumn),Integer)
            End Get
            Set
                Me(Me.tabledetalle_hr.idetapadefabricacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idlegajo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.idlegajoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idlegajo' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.idlegajoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idtorneado() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.idtorneadoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idtorneado' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.idtorneadoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorainicioreal() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.fechahorainiciorealColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorainicioreal' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.fechahorainiciorealColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorainicioplanificada() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.fechahorainicioplanificadaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorainicioplanificada' de la tabla 'detalle_hr' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.fechahorainicioplanificadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorafinreal() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.fechahorafinrealColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorafinreal' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.fechahorafinrealColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorafinplanificada() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.fechahorafinplanificadaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorafinplanificada' de la tabla 'detalle_hr' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.fechahorafinplanificadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.observacionesColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'observaciones' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.observacionesColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.nombreColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombre' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.nombreColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maquina() As String
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.maquinaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'maquina' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.maquinaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property duracionpromedio() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.duracionpromedioColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'duracionpromedio' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.duracionpromedioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.detalleColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'detalle' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.detalleColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orden() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.ordenColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'orden' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.ordenColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tiempoadicional() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledetalle_hr.tiempoadicionalColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'tiempoadicional' de la tabla 'detalle_hr' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledetalle_hr.tiempoadicionalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maestro_hrRow() As maestro_hrRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("maestro_hr_detalle_hr")),maestro_hrRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("maestro_hr_detalle_hr"))
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidlegajoNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.idlegajoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidlegajoNull()
            Me(Me.tabledetalle_hr.idlegajoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidtorneadoNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.idtorneadoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidtorneadoNull()
            Me(Me.tabledetalle_hr.idtorneadoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorainiciorealNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.fechahorainiciorealColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorainiciorealNull()
            Me(Me.tabledetalle_hr.fechahorainiciorealColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorainicioplanificadaNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.fechahorainicioplanificadaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorainicioplanificadaNull()
            Me(Me.tabledetalle_hr.fechahorainicioplanificadaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorafinrealNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.fechahorafinrealColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorafinrealNull()
            Me(Me.tabledetalle_hr.fechahorafinrealColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorafinplanificadaNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.fechahorafinplanificadaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorafinplanificadaNull()
            Me(Me.tabledetalle_hr.fechahorafinplanificadaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobservacionesNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.observacionesColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobservacionesNull()
            Me(Me.tabledetalle_hr.observacionesColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.nombreColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreNull()
            Me(Me.tabledetalle_hr.nombreColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmaquinaNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.maquinaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmaquinaNull()
            Me(Me.tabledetalle_hr.maquinaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsduracionpromedioNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.duracionpromedioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetduracionpromedioNull()
            Me(Me.tabledetalle_hr.duracionpromedioColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdetalleNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.detalleColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdetalleNull()
            Me(Me.tabledetalle_hr.detalleColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsordenNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.ordenColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetordenNull()
            Me(Me.tabledetalle_hr.ordenColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstiempoadicionalNull() As Boolean
            Return Me.IsNull(Me.tabledetalle_hr.tiempoadicionalColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettiempoadicionalNull()
            Me(Me.tabledetalle_hr.tiempoadicionalColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class maestro_hrRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As maestro_hrRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As maestro_hrRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As maestro_hrRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class detalle_hrRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As detalle_hrRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As detalle_hrRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As detalle_hrRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSHojaDeRutaTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class maestro_hrTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "maestro_hr"
            tableMapping.ColumnMappings.Add("nroserie", "nroserie")
            tableMapping.ColumnMappings.Add("fechafinfabricacion", "fechafinfabricacion")
            tableMapping.ColumnMappings.Add("costofabricacion", "costofabricacion")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("nropedido", "nropedido")
            tableMapping.ColumnMappings.Add("controlcalidad", "controlcalidad")
            tableMapping.ColumnMappings.Add("idhojaderuta", "idhojaderuta")
            tableMapping.ColumnMappings.Add("precio", "precio")
            tableMapping.ColumnMappings.Add("idtipo", "idtipo")
            tableMapping.ColumnMappings.Add("idmodelo", "idmodelo")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("diametroexterior", "diametroexterior")
            tableMapping.ColumnMappings.Add("diametroagujero", "diametroagujero")
            tableMapping.ColumnMappings.Add("cantidaddientes", "cantidaddientes")
            tableMapping.ColumnMappings.Add("plano", "plano")
            tableMapping.ColumnMappings.Add("caracteristicas", "caracteristicas")
            tableMapping.ColumnMappings.Add("imagen", "imagen")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Afilar.My.MySettings.Default.AfilarConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     fresa.nroserie, fresa.fechafinfabricacion, fresa.costofabricacion, fre"& _ 
                "sa.estado, fresa.nropedido, fresa.controlcalidad, fresa.idhojaderuta, fresa.prec"& _ 
                "io, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      fresa.idtipo, fresa.idmodelo, tipofresa.nombre, tipo"& _ 
                "fresa.diametroexterior, tipofresa.diametroagujero, tipofresa.cantidaddientes, ti"& _ 
                "pofresa.plano, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tipofresa.caracteristicas, tipofresa.imag"& _ 
                "en"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         fresa INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tipofresa ON fresa.idti"& _ 
                "po = tipofresa.idtipo AND fresa.idmodelo = tipofresa.idmodelo"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSHojaDeRuta.maestro_hrDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSHojaDeRuta.maestro_hrDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSHojaDeRuta.maestro_hrDataTable = New DSHojaDeRuta.maestro_hrDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class detalle_hrTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "detalle_hr"
            tableMapping.ColumnMappings.Add("idhojaderuta", "idhojaderuta")
            tableMapping.ColumnMappings.Add("idetapadefabricacion", "idetapadefabricacion")
            tableMapping.ColumnMappings.Add("idlegajo", "idlegajo")
            tableMapping.ColumnMappings.Add("idtorneado", "idtorneado")
            tableMapping.ColumnMappings.Add("fechahorainicioreal", "fechahorainicioreal")
            tableMapping.ColumnMappings.Add("fechahorainicioplanificada", "fechahorainicioplanificada")
            tableMapping.ColumnMappings.Add("fechahorafinreal", "fechahorafinreal")
            tableMapping.ColumnMappings.Add("fechahorafinplanificada", "fechahorafinplanificada")
            tableMapping.ColumnMappings.Add("observaciones", "observaciones")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("maquina", "maquina")
            tableMapping.ColumnMappings.Add("duracionpromedio", "duracionpromedio")
            tableMapping.ColumnMappings.Add("detalle", "detalle")
            tableMapping.ColumnMappings.Add("orden", "orden")
            tableMapping.ColumnMappings.Add("tiempoadicional", "tiempoadicional")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Afilar.My.MySettings.Default.AfilarConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     detallehojaderuta.idhojaderuta, detallehojaderuta.idetapadefabricacion"& _ 
                ", detallehojaderuta.idlegajo, detallehojaderuta.idtorneado, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    detallehojaderuta.fechahorainicioreal, detallehojaderuta.fechahorainicioplan"& _ 
                "ificada, detallehojaderuta.fechahorafinreal, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      detallehoja"& _ 
                "deruta.fechahorafinplanificada, detallehojaderuta.observaciones, operacion.nombr"& _ 
                "e, operacion.maquina, operacion.duracionpromedio, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      etapad"& _ 
                "efabricacion.detalle, etapadefabricacion.orden, etapadefabricacion.tiempoadicion"& _ 
                "al"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         operacion INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      etapadefabricacion "& _ 
                "ON operacion.idoperacion = etapadefabricacion.idoperacion INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "            detallehojaderuta ON etapadefabricacion.idetapafabricacion = detalle"& _ 
                "hojaderuta.idetapadefabricacion"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSHojaDeRuta.detalle_hrDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSHojaDeRuta.detalle_hrDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSHojaDeRuta.detalle_hrDataTable = New DSHojaDeRuta.detalle_hrDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
