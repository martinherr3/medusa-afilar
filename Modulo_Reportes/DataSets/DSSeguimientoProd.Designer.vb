'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.832
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("DSSeguimientoProd"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSSeguimientoProd
    Inherits System.Data.DataSet
    
    Private tablehojaderuta As hojaderutaDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("hojaderuta")) Is Nothing) Then
                MyBase.Tables.Add(New hojaderutaDataTable(ds.Tables("hojaderuta")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property hojaderuta() As hojaderutaDataTable
        Get
            Return Me.tablehojaderuta
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As DSSeguimientoProd = CType(MyBase.Clone,DSSeguimientoProd)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("hojaderuta")) Is Nothing) Then
                MyBase.Tables.Add(New hojaderutaDataTable(ds.Tables("hojaderuta")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablehojaderuta = CType(MyBase.Tables("hojaderuta"),hojaderutaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablehojaderuta) Is Nothing) Then
                Me.tablehojaderuta.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DSSeguimientoProd"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSSeguimientoProd.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablehojaderuta = New hojaderutaDataTable
        MyBase.Tables.Add(Me.tablehojaderuta)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializehojaderuta() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSSeguimientoProd = New DSSeguimientoProd
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub hojaderutaRowChangeEventHandler(ByVal sender As Object, ByVal e As hojaderutaRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class hojaderutaDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnidhojaderuta As System.Data.DataColumn
        
        Private columnfechainicioproduccion As System.Data.DataColumn
        
        Private columnnombreEmpleado As System.Data.DataColumn
        
        Private columnapellidoEmpleado As System.Data.DataColumn
        
        Private columnnombreFresa As System.Data.DataColumn
        
        Private columnidmodelo As System.Data.DataColumn
        
        Private columnidtipo As System.Data.DataColumn
        
        Private columnestado As System.Data.DataColumn
        
        Private columnnombreOperacion As System.Data.DataColumn
        
        Private columnmaquina As System.Data.DataColumn
        
        Private columnduracionpromedio As System.Data.DataColumn
        
        Private columnorden As System.Data.DataColumn
        
        Private columnidlegajo As System.Data.DataColumn
        
        Private columnfechahorainicioreal As System.Data.DataColumn
        
        Private columnfechahorainicioplanificada As System.Data.DataColumn
        
        Private columnfechahorafinreal As System.Data.DataColumn
        
        Private columnfechahorafinplanificada As System.Data.DataColumn
        
        Private columnobservaciones As System.Data.DataColumn
        
        Private columnnombreTornero As System.Data.DataColumn
        
        Private columnapellidoTornero As System.Data.DataColumn
        
        Private columnfechasalidad As System.Data.DataColumn
        
        Private columnfecharecepcion As System.Data.DataColumn
        
        Private columntiempoadicional As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "hojaderuta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idhojaderutaColumn() As System.Data.DataColumn
            Get
                Return Me.columnidhojaderuta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechainicioproduccionColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechainicioproduccion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreEmpleadoColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombreEmpleado
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property apellidoEmpleadoColumn() As System.Data.DataColumn
            Get
                Return Me.columnapellidoEmpleado
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreFresaColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombreFresa
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idmodeloColumn() As System.Data.DataColumn
            Get
                Return Me.columnidmodelo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idtipoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidtipo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreOperacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombreOperacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property maquinaColumn() As System.Data.DataColumn
            Get
                Return Me.columnmaquina
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property duracionpromedioColumn() As System.Data.DataColumn
            Get
                Return Me.columnduracionpromedio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ordenColumn() As System.Data.DataColumn
            Get
                Return Me.columnorden
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idlegajoColumn() As System.Data.DataColumn
            Get
                Return Me.columnidlegajo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorainiciorealColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorainicioreal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorainicioplanificadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorainicioplanificada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorafinrealColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorafinreal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechahorafinplanificadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechahorafinplanificada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property observacionesColumn() As System.Data.DataColumn
            Get
                Return Me.columnobservaciones
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreTorneroColumn() As System.Data.DataColumn
            Get
                Return Me.columnnombreTornero
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property apellidoTorneroColumn() As System.Data.DataColumn
            Get
                Return Me.columnapellidoTornero
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechasalidadColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechasalidad
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecharecepcionColumn() As System.Data.DataColumn
            Get
                Return Me.columnfecharecepcion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tiempoadicionalColumn() As System.Data.DataColumn
            Get
                Return Me.columntiempoadicional
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As hojaderutaRow
            Get
                Return CType(Me.Rows(index),hojaderutaRow)
            End Get
        End Property
        
        Public Event hojaderutaRowChanging As hojaderutaRowChangeEventHandler
        
        Public Event hojaderutaRowChanged As hojaderutaRowChangeEventHandler
        
        Public Event hojaderutaRowDeleting As hojaderutaRowChangeEventHandler
        
        Public Event hojaderutaRowDeleted As hojaderutaRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddhojaderutaRow(ByVal row As hojaderutaRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddhojaderutaRow( _
                    ByVal idhojaderuta As Integer,  _
                    ByVal fechainicioproduccion As Date,  _
                    ByVal nombreEmpleado As String,  _
                    ByVal apellidoEmpleado As String,  _
                    ByVal nombreFresa As String,  _
                    ByVal idmodelo As Integer,  _
                    ByVal idtipo As Integer,  _
                    ByVal estado As Integer,  _
                    ByVal nombreOperacion As String,  _
                    ByVal maquina As String,  _
                    ByVal duracionpromedio As Double,  _
                    ByVal orden As Integer,  _
                    ByVal idlegajo As Integer,  _
                    ByVal fechahorainicioreal As Date,  _
                    ByVal fechahorainicioplanificada As Date,  _
                    ByVal fechahorafinreal As Date,  _
                    ByVal fechahorafinplanificada As Date,  _
                    ByVal observaciones As String,  _
                    ByVal nombreTornero As String,  _
                    ByVal apellidoTornero As String,  _
                    ByVal fechasalidad As Date,  _
                    ByVal fecharecepcion As Date,  _
                    ByVal tiempoadicional As Double) As hojaderutaRow
            Dim rowhojaderutaRow As hojaderutaRow = CType(Me.NewRow,hojaderutaRow)
            rowhojaderutaRow.ItemArray = New Object() {idhojaderuta, fechainicioproduccion, nombreEmpleado, apellidoEmpleado, nombreFresa, idmodelo, idtipo, estado, nombreOperacion, maquina, duracionpromedio, orden, idlegajo, fechahorainicioreal, fechahorainicioplanificada, fechahorafinreal, fechahorafinplanificada, observaciones, nombreTornero, apellidoTornero, fechasalidad, fecharecepcion, tiempoadicional}
            Me.Rows.Add(rowhojaderutaRow)
            Return rowhojaderutaRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByidhojaderuta(ByVal idhojaderuta As Integer) As hojaderutaRow
            Return CType(Me.Rows.Find(New Object() {idhojaderuta}),hojaderutaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As hojaderutaDataTable = CType(MyBase.Clone,hojaderutaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New hojaderutaDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnidhojaderuta = MyBase.Columns("idhojaderuta")
            Me.columnfechainicioproduccion = MyBase.Columns("fechainicioproduccion")
            Me.columnnombreEmpleado = MyBase.Columns("nombreEmpleado")
            Me.columnapellidoEmpleado = MyBase.Columns("apellidoEmpleado")
            Me.columnnombreFresa = MyBase.Columns("nombreFresa")
            Me.columnidmodelo = MyBase.Columns("idmodelo")
            Me.columnidtipo = MyBase.Columns("idtipo")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnnombreOperacion = MyBase.Columns("nombreOperacion")
            Me.columnmaquina = MyBase.Columns("maquina")
            Me.columnduracionpromedio = MyBase.Columns("duracionpromedio")
            Me.columnorden = MyBase.Columns("orden")
            Me.columnidlegajo = MyBase.Columns("idlegajo")
            Me.columnfechahorainicioreal = MyBase.Columns("fechahorainicioreal")
            Me.columnfechahorainicioplanificada = MyBase.Columns("fechahorainicioplanificada")
            Me.columnfechahorafinreal = MyBase.Columns("fechahorafinreal")
            Me.columnfechahorafinplanificada = MyBase.Columns("fechahorafinplanificada")
            Me.columnobservaciones = MyBase.Columns("observaciones")
            Me.columnnombreTornero = MyBase.Columns("nombreTornero")
            Me.columnapellidoTornero = MyBase.Columns("apellidoTornero")
            Me.columnfechasalidad = MyBase.Columns("fechasalidad")
            Me.columnfecharecepcion = MyBase.Columns("fecharecepcion")
            Me.columntiempoadicional = MyBase.Columns("tiempoadicional")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnidhojaderuta = New System.Data.DataColumn("idhojaderuta", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidhojaderuta)
            Me.columnfechainicioproduccion = New System.Data.DataColumn("fechainicioproduccion", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechainicioproduccion)
            Me.columnnombreEmpleado = New System.Data.DataColumn("nombreEmpleado", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombreEmpleado)
            Me.columnapellidoEmpleado = New System.Data.DataColumn("apellidoEmpleado", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapellidoEmpleado)
            Me.columnnombreFresa = New System.Data.DataColumn("nombreFresa", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombreFresa)
            Me.columnidmodelo = New System.Data.DataColumn("idmodelo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidmodelo)
            Me.columnidtipo = New System.Data.DataColumn("idtipo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtipo)
            Me.columnestado = New System.Data.DataColumn("estado", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnnombreOperacion = New System.Data.DataColumn("nombreOperacion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombreOperacion)
            Me.columnmaquina = New System.Data.DataColumn("maquina", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaquina)
            Me.columnduracionpromedio = New System.Data.DataColumn("duracionpromedio", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnduracionpromedio)
            Me.columnorden = New System.Data.DataColumn("orden", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorden)
            Me.columnidlegajo = New System.Data.DataColumn("idlegajo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidlegajo)
            Me.columnfechahorainicioreal = New System.Data.DataColumn("fechahorainicioreal", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorainicioreal)
            Me.columnfechahorainicioplanificada = New System.Data.DataColumn("fechahorainicioplanificada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorainicioplanificada)
            Me.columnfechahorafinreal = New System.Data.DataColumn("fechahorafinreal", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorafinreal)
            Me.columnfechahorafinplanificada = New System.Data.DataColumn("fechahorafinplanificada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechahorafinplanificada)
            Me.columnobservaciones = New System.Data.DataColumn("observaciones", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservaciones)
            Me.columnnombreTornero = New System.Data.DataColumn("nombreTornero", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombreTornero)
            Me.columnapellidoTornero = New System.Data.DataColumn("apellidoTornero", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapellidoTornero)
            Me.columnfechasalidad = New System.Data.DataColumn("fechasalidad", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechasalidad)
            Me.columnfecharecepcion = New System.Data.DataColumn("fecharecepcion", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecharecepcion)
            Me.columntiempoadicional = New System.Data.DataColumn("tiempoadicional", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntiempoadicional)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnidhojaderuta}, true))
            Me.columnidhojaderuta.AllowDBNull = false
            Me.columnidhojaderuta.Unique = true
            Me.columnnombreEmpleado.MaxLength = 50
            Me.columnapellidoEmpleado.MaxLength = 50
            Me.columnnombreFresa.MaxLength = 100
            Me.columnnombreOperacion.MaxLength = 40
            Me.columnmaquina.MaxLength = 40
            Me.columnobservaciones.MaxLength = 30
            Me.columnnombreTornero.MaxLength = 50
            Me.columnapellidoTornero.MaxLength = 50
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewhojaderutaRow() As hojaderutaRow
            Return CType(Me.NewRow,hojaderutaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New hojaderutaRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(hojaderutaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.hojaderutaRowChangedEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowChanged(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.hojaderutaRowChangingEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowChanging(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.hojaderutaRowDeletedEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowDeleted(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.hojaderutaRowDeletingEvent) Is Nothing) Then
                RaiseEvent hojaderutaRowDeleting(Me, New hojaderutaRowChangeEvent(CType(e.Row,hojaderutaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovehojaderutaRow(ByVal row As hojaderutaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSSeguimientoProd = New DSSeguimientoProd
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "hojaderutaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class hojaderutaRow
        Inherits System.Data.DataRow
        
        Private tablehojaderuta As hojaderutaDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablehojaderuta = CType(Me.Table,hojaderutaDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idhojaderuta() As Integer
            Get
                Return CType(Me(Me.tablehojaderuta.idhojaderutaColumn),Integer)
            End Get
            Set
                Me(Me.tablehojaderuta.idhojaderutaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechainicioproduccion() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechainicioproduccionColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechainicioproduccion' de la tabla 'hojaderuta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechainicioproduccionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombreEmpleado() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.nombreEmpleadoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombreEmpleado' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.nombreEmpleadoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property apellidoEmpleado() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.apellidoEmpleadoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'apellidoEmpleado' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.apellidoEmpleadoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombreFresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.nombreFresaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombreFresa' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.nombreFresaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idmodelo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idmodeloColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idmodelo' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idmodeloColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idtipo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idtipoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idtipo' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idtipoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.estadoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.estadoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombreOperacion() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.nombreOperacionColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombreOperacion' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.nombreOperacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maquina() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.maquinaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'maquina' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.maquinaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property duracionpromedio() As Double
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.duracionpromedioColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'duracionpromedio' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.duracionpromedioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orden() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.ordenColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'orden' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.ordenColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idlegajo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.idlegajoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'idlegajo' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.idlegajoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorainicioreal() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorainiciorealColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorainicioreal' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorainiciorealColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorainicioplanificada() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorainicioplanificadaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorainicioplanificada' de la tabla 'hojaderuta' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorainicioplanificadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorafinreal() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorafinrealColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorafinreal' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorafinrealColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechahorafinplanificada() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechahorafinplanificadaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechahorafinplanificada' de la tabla 'hojaderuta' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechahorafinplanificadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.observacionesColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'observaciones' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.observacionesColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombreTornero() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.nombreTorneroColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'nombreTornero' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.nombreTorneroColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property apellidoTornero() As String
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.apellidoTorneroColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'apellidoTornero' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.apellidoTorneroColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechasalidad() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fechasalidadColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fechasalidad' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fechasalidadColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecharecepcion() As Date
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.fecharecepcionColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'fecharecepcion' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.fecharecepcionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tiempoadicional() As Double
            Get
                Try 
                    Return CType(Me(Me.tablehojaderuta.tiempoadicionalColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("El valor de la columna 'tiempoadicional' de la tabla 'hojaderuta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablehojaderuta.tiempoadicionalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechainicioproduccionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechainicioproduccionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechainicioproduccionNull()
            Me(Me.tablehojaderuta.fechainicioproduccionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.nombreEmpleadoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreEmpleadoNull()
            Me(Me.tablehojaderuta.nombreEmpleadoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsapellidoEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.apellidoEmpleadoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetapellidoEmpleadoNull()
            Me(Me.tablehojaderuta.apellidoEmpleadoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreFresaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.nombreFresaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreFresaNull()
            Me(Me.tablehojaderuta.nombreFresaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidmodeloNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idmodeloColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidmodeloNull()
            Me(Me.tablehojaderuta.idmodeloColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidtipoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idtipoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidtipoNull()
            Me(Me.tablehojaderuta.idtipoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.estadoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetestadoNull()
            Me(Me.tablehojaderuta.estadoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreOperacionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.nombreOperacionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreOperacionNull()
            Me(Me.tablehojaderuta.nombreOperacionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmaquinaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.maquinaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmaquinaNull()
            Me(Me.tablehojaderuta.maquinaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsduracionpromedioNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.duracionpromedioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetduracionpromedioNull()
            Me(Me.tablehojaderuta.duracionpromedioColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsordenNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.ordenColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetordenNull()
            Me(Me.tablehojaderuta.ordenColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidlegajoNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.idlegajoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidlegajoNull()
            Me(Me.tablehojaderuta.idlegajoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorainiciorealNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorainiciorealColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorainiciorealNull()
            Me(Me.tablehojaderuta.fechahorainiciorealColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorainicioplanificadaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorainicioplanificadaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorainicioplanificadaNull()
            Me(Me.tablehojaderuta.fechahorainicioplanificadaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorafinrealNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorafinrealColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorafinrealNull()
            Me(Me.tablehojaderuta.fechahorafinrealColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechahorafinplanificadaNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechahorafinplanificadaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechahorafinplanificadaNull()
            Me(Me.tablehojaderuta.fechahorafinplanificadaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobservacionesNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.observacionesColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobservacionesNull()
            Me(Me.tablehojaderuta.observacionesColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreTorneroNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.nombreTorneroColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreTorneroNull()
            Me(Me.tablehojaderuta.nombreTorneroColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsapellidoTorneroNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.apellidoTorneroColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetapellidoTorneroNull()
            Me(Me.tablehojaderuta.apellidoTorneroColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechasalidadNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fechasalidadColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechasalidadNull()
            Me(Me.tablehojaderuta.fechasalidadColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfecharecepcionNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.fecharecepcionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfecharecepcionNull()
            Me(Me.tablehojaderuta.fecharecepcionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstiempoadicionalNull() As Boolean
            Return Me.IsNull(Me.tablehojaderuta.tiempoadicionalColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettiempoadicionalNull()
            Me(Me.tablehojaderuta.tiempoadicionalColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class hojaderutaRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As hojaderutaRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As hojaderutaRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As hojaderutaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSSeguimientoProdTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class hojaderutaTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "hojaderuta"
            tableMapping.ColumnMappings.Add("idhojaderuta", "idhojaderuta")
            tableMapping.ColumnMappings.Add("fechainicioproduccion", "fechainicioproduccion")
            tableMapping.ColumnMappings.Add("nombreEmpleado", "nombreEmpleado")
            tableMapping.ColumnMappings.Add("apellidoEmpleado", "apellidoEmpleado")
            tableMapping.ColumnMappings.Add("nombreFresa", "nombreFresa")
            tableMapping.ColumnMappings.Add("idmodelo", "idmodelo")
            tableMapping.ColumnMappings.Add("idtipo", "idtipo")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("nombreOperacion", "nombreOperacion")
            tableMapping.ColumnMappings.Add("maquina", "maquina")
            tableMapping.ColumnMappings.Add("duracionpromedio", "duracionpromedio")
            tableMapping.ColumnMappings.Add("orden", "orden")
            tableMapping.ColumnMappings.Add("idlegajo", "idlegajo")
            tableMapping.ColumnMappings.Add("fechahorainicioreal", "fechahorainicioreal")
            tableMapping.ColumnMappings.Add("fechahorainicioplanificada", "fechahorainicioplanificada")
            tableMapping.ColumnMappings.Add("fechahorafinreal", "fechahorafinreal")
            tableMapping.ColumnMappings.Add("fechahorafinplanificada", "fechahorafinplanificada")
            tableMapping.ColumnMappings.Add("observaciones", "observaciones")
            tableMapping.ColumnMappings.Add("nombreTornero", "nombreTornero")
            tableMapping.ColumnMappings.Add("apellidoTornero", "apellidoTornero")
            tableMapping.ColumnMappings.Add("fechasalidad", "fechasalidad")
            tableMapping.ColumnMappings.Add("fecharecepcion", "fecharecepcion")
            tableMapping.ColumnMappings.Add("tiempoadicional", "tiempoadicional")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Afilar.My.MySettings.Default.AfilarConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     hojaderuta.idhojaderuta, hojaderuta.fechainicioproduccion, empleado.no"& _ 
                "mbre AS nombreEmpleado, empleado.apellido AS apellidoEmpleado, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tipofresa.nombre AS nombreFresa, fresa.idmodelo, fresa.idtipo, fresa.esta"& _ 
                "do, operacion.nombre AS nombreOperacion, operacion.maquina, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    operacion.duracionpromedio, etapadefabricacion.orden, detallehojaderuta.idle"& _ 
                "gajo, detallehojaderuta.fechahorainicioreal, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      detallehoja"& _ 
                "deruta.fechahorainicioplanificada, detallehojaderuta.fechahorafinreal, detalleho"& _ 
                "jaderuta.fechahorafinplanificada, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      detallehojaderuta.obse"& _ 
                "rvaciones, tornero.nombre AS nombreTornero, tornero.apellido AS apellidoTornero,"& _ 
                " torneado.fechasalidad, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      torneado.fecharecepcion, etapade"& _ 
                "fabricacion.tiempoadicional"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         fresa INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  hojaderuta INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      detallehojaderuta ON hojaderuta.i"& _ 
                "dhojaderuta = detallehojaderuta.idhojaderuta ON fresa.idhojaderuta = hojaderuta."& _ 
                "idhojaderuta INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tipofresa ON fresa.idtipo = tipof"& _ 
                "resa.idtipo AND fresa.idmodelo = tipofresa.idmodelo INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      operacion INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      etapadefabricacion ON operacio"& _ 
                "n.idoperacion = etapadefabricacion.idoperacion ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      detall"& _ 
                "ehojaderuta.idetapadefabricacion = etapadefabricacion.idetapafabricacion INNER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      empleado ON detallehojaderuta.idlegajo = empleado.idl"& _ 
                "egajo INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      torneado ON detallehojaderuta.idtorneado"& _ 
                " = torneado.idtorneado INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tornero ON torneado.idt"& _ 
                "ornero = tornero.idtornero"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSSeguimientoProd.hojaderutaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSSeguimientoProd.hojaderutaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSSeguimientoProd.hojaderutaDataTable = New DSSeguimientoProd.hojaderutaDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
